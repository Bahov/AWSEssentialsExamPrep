// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Stack 1`] = `
{
  "Outputs": {
    "MyRestApiEndpoint": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "MyRestApi2D1F47A9",
            },
            ".execute-api.eu-central-1.amazonaws.com/prod/processJSON",
          ],
        ],
      },
    },
    "MyRestApiEndpoint4C55E4CB": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "MyRestApi2D1F47A9",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "MyRestApiDeploymentStageprodC33B8E5F",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Resources": {
    "CleanupFunction1604930F": {
      "DependsOn": [
        "CleanupFunctionServiceRoleDefaultPolicyCE5A0316",
        "CleanupFunctionServiceRole43A5351E",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "bc8b2fc5560a926692373e03c6964e2a6a8b5eecd650ce7a7a2928c9e79d0a98.zip",
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "ErrorTableA27F7F12",
            },
            "TOPIC_ARN": {
              "Ref": "ErrorTopicA0904A23",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CleanupFunctionServiceRole43A5351E",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "CleanupFunctionDynamoDBEventSourceMyTestStackErrorTable4C851020B9B14B9D": {
      "Properties": {
        "BatchSize": 5,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "ErrorTableA27F7F12",
            "StreamArn",
          ],
        },
        "FilterCriteria": {
          "Filters": [
            {
              "Pattern": "{"eventName":["REMOVE"]}",
            },
          ],
        },
        "FunctionName": {
          "Ref": "CleanupFunction1604930F",
        },
        "StartingPosition": "LATEST",
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "CleanupFunctionServiceRole43A5351E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CleanupFunctionServiceRoleDefaultPolicyCE5A0316": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "ErrorTopicA0904A23",
              },
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ErrorTableA27F7F12",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            {
              "Action": "dynamodb:ListStreams",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ErrorTableA27F7F12",
                  "StreamArn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CleanupFunctionServiceRoleDefaultPolicyCE5A0316",
        "Roles": [
          {
            "Ref": "CleanupFunctionServiceRole43A5351E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ErrorSubscription9DAFDAFE": {
      "Properties": {
        "Endpoint": "tsvetomir.bahov@gmail.com",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "ErrorTopicA0904A23",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "ErrorTableA27F7F12": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "PK",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "PK",
            "KeyType": "HASH",
          },
        ],
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES",
        },
        "TimeToLiveSpecification": {
          "AttributeName": "TTL",
          "Enabled": true,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "ErrorTopicA0904A23": {
      "Properties": {
        "TopicName": "ErrorTopic",
      },
      "Type": "AWS::SNS::Topic",
    },
    "MyRestApi2D1F47A9": {
      "Properties": {
        "Name": "MyRestApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "MyRestApiAccount2FB6DB7A": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "MyRestApi2D1F47A9",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "MyRestApiCloudWatchRoleD4042E8E",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "MyRestApiCloudWatchRoleD4042E8E": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "MyRestApiDeploymentB555B582d9618143b36a7bf1c18b21280711d3cb": {
      "DependsOn": [
        "MyRestApiProcessJSONPOSTA43844BB",
        "MyRestApiProcessJSON7EB2FB08",
      ],
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "MyRestApi2D1F47A9",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "MyRestApiDeploymentStageprodC33B8E5F": {
      "DependsOn": [
        "MyRestApiAccount2FB6DB7A",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "MyRestApiDeploymentB555B582d9618143b36a7bf1c18b21280711d3cb",
        },
        "RestApiId": {
          "Ref": "MyRestApi2D1F47A9",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "MyRestApiProcessJSON7EB2FB08": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "MyRestApi2D1F47A9",
            "RootResourceId",
          ],
        },
        "PathPart": "ProcessJSON",
        "RestApiId": {
          "Ref": "MyRestApi2D1F47A9",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "MyRestApiProcessJSONPOSTA43844BB": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ProcessJSONFunction427D3D69",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "MyRestApiProcessJSON7EB2FB08",
        },
        "RestApiId": {
          "Ref": "MyRestApi2D1F47A9",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "MyRestApiProcessJSONPOSTApiPermissionMyTestStackMyRestApi32A8E2F6POSTProcessJSON49A53514": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ProcessJSONFunction427D3D69",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "MyRestApi2D1F47A9",
              },
              "/",
              {
                "Ref": "MyRestApiDeploymentStageprodC33B8E5F",
              },
              "/POST/ProcessJSON",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "MyRestApiProcessJSONPOSTApiPermissionTestMyTestStackMyRestApi32A8E2F6POSTProcessJSON94000AC3": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ProcessJSONFunction427D3D69",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "MyRestApi2D1F47A9",
              },
              "/test-invoke-stage/POST/ProcessJSON",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ProcessJSONFunction427D3D69": {
      "DependsOn": [
        "ProcessJSONFunctionServiceRoleDefaultPolicyC653C151",
        "ProcessJSONFunctionServiceRole59FEF8E2",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "ec65c9c75bf8bd280b831f478eae9f5d5f395321b951a264c4a94b8fbad542bb.zip",
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "ErrorTableA27F7F12",
            },
            "TOPIC_ARN": {
              "Ref": "ErrorTopicA0904A23",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "ProcessJSONFunctionServiceRole59FEF8E2",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ProcessJSONFunctionServiceRole59FEF8E2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ProcessJSONFunctionServiceRoleDefaultPolicyC653C151": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "ErrorTopicA0904A23",
              },
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ErrorTableA27F7F12",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ProcessJSONFunctionServiceRoleDefaultPolicyC653C151",
        "Roles": [
          {
            "Ref": "ProcessJSONFunctionServiceRole59FEF8E2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;
